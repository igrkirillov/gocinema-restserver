openapi: 3.0.0
info:
  title: Go Cinema Rest Api Spec
  description: >
    `Design First`, `Validated`
  version: project.version
servers:
  - url: "/"
tags:
  - name: Users
    description: Пользователи
  - name: Halls
    description: Кинозалы
paths:
  /users:
    get:
      summary: Получение всех пользователей
      operationId: getUsers
      tags:
        - Users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Заведение нового пользователя
      operationId: saveUser
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserParameters'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /halls:
    get:
      summary: Получение всех кинозалов
      operationId: getHalls
      tags:
        - Halls
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hall'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Сохранение нового кинозала
      operationId: saveHall
      tags:
        - Halls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HallParameters'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hall'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /halls/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    patch:
      summary: Обновление кинозала
      operationId: updateHall
      tags:
        - Halls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HallParameters'
      responses:
        200:
          description: OK
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/id'
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
          description: Логин
          example: "laba"
        role:
          $ref: '#/components/schemas/Role'
      required:
        - login
        - password
        - role
    UserParameters:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        role:
          $ref: '#/components/schemas/Role'
      required:
        - login
        - password
        - role
    Hall:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          description: Наименование
          example: "Вип-зал"
        cols:
          type: integer
          format: int32
          description: Кол-во мест по оси X
        rows:
          type: integer
          format: int32
          description: Кол-во мест по оси y
      required:
        - id
        - name
        - cols
        - rows
    HallParameters:
      type: object
      properties:
        name:
          type: string
          description: Наименование
          example: "Вип-зал"
        rows:
          type: integer
          format: int32
          default: 0
          description: Кол-во мест по оси X
        cols:
          type: integer
          format: int32
          default: 0
          description: Кол-во мест по оси Y
      required:
        - name
        - cols
        - rows
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 123456
        message:
          type: string
          description: Текст ошибки
          example: "Упс!"
    Role:
      type: string
      enum:
        - CUSTOMER
        - ADMIN
    id:
      description: Идентификатор сущности
      type: integer
      format: int32
      example: 12345